name: Pull Request Validation

on:
  pull_request:
    branches:
      - main
      - next

jobs:
  build_feature:
    name: Wrapper + Manual Downloads
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        #os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            name: win
          - os: macos-latest
            name: mac
          - os: ubuntu-latest
            name: linux
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get Dependencies
        run: |
          mkdir deps
          cd deps
          git clone https://github.com/free-audio/clap
          git clone https://github.com/steinbergmedia/vst3sdk
          cd vst3sdk
          # temporary workaround, switch to vst3 sdk 3.7.7
          git switch --detach v3.7.7_build_19
          git submodule update --init --recursive
          cd ../..

      - name: Build project
        run: |
          cmake -S . -B ./build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCLAP_SDK_ROOT=deps/clap -DVST3_SDK_ROOT=deps/vst3sdk -DCLAP_WRAPPER_OUTPUT_NAME=testplug
          cmake --build ./build --config Debug

      - name: Show Build Results
        shell: bash
        run: |
          find build -name testplug.vst3 -print
          find build -name testplug.component -print


  build_feature_cpm_download:
    name: Wrapper + CPM Downloads
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            cmakeargs: -A x64
            install_ninja: false
            run_aptget: false

          - os: windows-latest
            cmakeargs: -A x64 -DCLAP_WRAPPER_CXX_STANDARD=20
            install_ninja: false
            run_aptget: false

          - os: ubuntu-latest
            cmakeargs: -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_C_COMPILER=gcc-11
            install_ninja: false
            run_aptget: true

          - os: ubuntu-latest
            cmakeargs: -DCMAKE_CXX_COMPILER=g++-12 -DCMAKE_C_COMPILER=gcc-12
            install_ninja: false
            run_aptget: true

          - os: ubuntu-latest
            cmakeargs: -DCLAP_WRAPPER_CXX_STANDARD=20 -DCMAKE_CXX_COMPILER=g++-12 -DCMAKE_C_COMPILER=gcc-12
            install_ninja: false
            run_aptget: true

          - os: macos-latest
            cmakeargs: -GNinja
            install_ninja: true
            run_aptget: false

          - os: macos-latest
            cmakeargs: -GNinja -DCLAP_WRAPPER_CXX_STANDARD=20
            install_ninja: true
            run_aptget: false

          - os: macos-latest
            cmakeargs: -G"Ninja Multi-Config"
            install_ninja: true
            run_aptget: false

          - os: macos-latest
            cmakeargs: -G"Unix Makefiles"
            install_ninja: false
            run_aptget: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get Deps
        if: ${{ matrix.run_aptget }}
        run: sudo apt-get install -y alsa alsa-tools libasound2-dev libjack-dev libgtk-3-dev

      - name: Install Ninja
        if: ${{ matrix.install_ninja }}
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Build project
        run: |
          cmake -S . -B ./build ${{ matrix.cmakeargs }} -DCMAKE_BUILD_TYPE=Debug -DCLAP_WRAPPER_DOWNLOAD_DEPENDENCIES=TRUE -DCLAP_WRAPPER_BUILD_AUV2=TRUE  -DCLAP_WRAPPER_BUILD_STANDALONE=TRUE -DCLAP_WRAPPER_OUTPUT_NAME=downloadplug
          cmake --build ./build --config Debug

      - name: Show Build Results
        shell: bash
        run: |
          find build -name downloadplug.vst3 -print
          find build -name downloadplug.component -print

